import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/lib/styles/home.module.css'
import Header from '@/lib/components/shared/header'
import { Input } from '@/lib/components/shared'
import ProductCard from '@/lib/components/shared/product-card'
import { useEffect, useState } from 'react'
import { SearchResult } from '@/lib/models/search.model'

const inter = Inter({ subsets: ['latin'] })

const objectToURLParams = (object: any) => {
  return Object.entries(object)
    .map(([key, value]) => `${key}=${value}`)
    .join('&')
}

const API_ROUTE = 'https://api.mercadolibre.com/sites/MLA/search'
interface Filters {
  [key: string]: string
}
const queryParams = new Map(
  [
    ['q', 'milho'],
    ['order', 'desc'],
    ['sort', 'price'],
    ['limit', 10],
  ].map(([key, value]) => [key, value])
)
const apiRoute = (route: string, params: Map<string, string | number>) => {
  const url = new URL(route)
  const urlParams = new URLSearchParams(params)
  url.search = urlParams.toString()
  return url.href
}

export default function Home() {
  const [products, setProducts] = useState<SearchResult | null>()

  const [filters, setFilters] =
    useState<Map<string, string | number>>(queryParams)

  const onFiltersChange = (filter) => {
    const [[param, value]] = Object.entries(filter)

    setFilters((prev) => new Map([...prev]).set(param, value))
  }

  useEffect(() => {
    ;(async function () {
      try {
        const response = await fetch(apiRoute(API_ROUTE, filters))
        const data = await response.json()
        const searchResults = new SearchResult(data)

        setProducts(searchResults)
      } catch (error) {
        console.error('Error fetching data:', error)
      }
    })()
  }, [filters])
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Header>
          <Input name="q" endAdornment onChange={onFiltersChange} />
        </Header>

        {products?.results?.size > 0 &&
          Array.from(products.results.entries()).map(([id, product]) => (
            <ProductCard key={product.id} product={product} />
          ))}
      </main>
    </>
  )
}
