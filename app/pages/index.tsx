import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/pages/home.module.css'
import Header from '@/lib/components/shared/header'
import { Input } from '@/lib/components/shared'
import ProductCard from '@/lib/components/shared/product-card'
import { useEffect, useState } from 'react'
import { SearchResult } from '@/lib/models/search.model'
import { useDebounce } from '@/lib/hooks/useDebounce'
import ProductList from '@/lib/components/shared/product-list'

const inter = Inter({ subsets: ['latin'] })

const objectToURLParams = (object: any) => {
  return Object.entries(object)
    .map(([key, value]) => `${key}=${value}`)
    .join('&')
}

const API_ROUTE = 'https://api.mercadolibre.com/sites/MLA/search'
interface Filters {
  [key: string]: string
}
const queryParams = { q: '', order: 'desc', sort: 'price', limit: 10 }

const apiRoute = (route: string, params: {}) => {
  const url = new URL(route)
  const urlParams = new URLSearchParams(params)
  url.search = urlParams.toString()
  return url.href
}

export default function Home() {
  const [products, setProducts] = useState<SearchResult>()

  const [filters, setFilters] = useState(queryParams)

  const debouncedFilters = useDebounce(filters, 300)

  useEffect(() => {
    fetchData(debouncedFilters)
  }, [debouncedFilters])

  const fetchData = async (appliedFilters) => {
    try {
      const response = await fetch(apiRoute(API_ROUTE, appliedFilters))
      const data = await response.json()
      const searchResults = new SearchResult(data)

      setProducts(searchResults)
    } catch (error) {
      console.error('Error fetching data:', error)
    }
  }

  const onFiltersChange = (filter) =>
    setFilters((prev) => ({ ...prev, ...filter }))
  console.log({ products })
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={inter.className}>
        <Header>
          <Input name="q" endAdornment onChange={onFiltersChange} />
        </Header>
        {!!(products?.results.size && products?.results.size > 0) && (
          <section className={styles.productListSection}>
            <div className={styles.productListWrapper}>
              <ProductList products={products?.results} />
            </div>
          </section>
        )}
      </main>
    </>
  )
}
